#!/bin/sh
#---------------------------------------------------------------------
# Copyright (c) 2016-2021 James O. D. Hunt <jamesodhunt@gmail.com>.
#
# SPDX-License-Identifier: GPL-3.0-or-later
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Description: Script to dump machine details, to help debug build
#   errors.
#---------------------------------------------------------------------

export LANG=C
export LC_ALL=C

readonly script_name=${0##*/}

set -o errexit

set -o nounset
set -o pipefail

[ -n "$BASH_VERSION" ] && set -o errtrace
[ -n "${DEBUG:-}" ] && set -o xtrace

info()
{
    local msg="$*"
    echo "INFO: $script_name: $msg"
}

show_generic()
{
    info "# Generic system details"

    local file

    for file in \
        "/etc/issue" \
        "/etc/lsb-release" \
        "/etc/os-release"
    do
        [ ! -s "$file" ]  && continue

        info "## File '$file'"
        cat "$file" 2>/dev/null || true
    done

    info "## uname"
    uname -a

    info "## ulimit"
    ulimit -a
}

show_compiler()
{
    info "# Compiler details"

    local cc

    for cc in \
        "clang" \
        "gcc"
    do
        info "## '$cc' compiler"
        $cc --version
    done
}

show_linux()
{
    info "# Linux details"

    info "## Memory details"
    cat /proc/meminfo
    echo

    info "## CPU count"
    grep -c ^processor /proc/cpuinfo
    echo

    info "## CPU details"

    # show first CPU only
    awk 'BEGIN { RS=""; } { printf ("%s\n", $0); exit (0); }' \
        /proc/cpuinfo
    echo

    kvm=$(cat /sys/module/kvm_intel/parameters/nested 2>/dev/null \
        || echo N)

    info "## Nested KVM support"
    echo "$kvm"
    echo

    info "## Kernel modules"
    lsmod | sort
}

show_darwin()
{
    info "# Darwin/Mac OSX details"

    info "## Host information"
    hostinfo
}

show_bsd()
{
    info "# *BSD details"

    info "## File 'rc.conf'"
    grep -Ev "^(#|$)" /etc/rc.conf | sort
}

show_hurd()
{
    info "# Hurd details"

    # FIXME: What to do?
    true
}

main()
{
    local system=$(uname -s|tr '[A-Z]' '[a-z]')

    info "# System type: '$system'"

    show_generic

    show_compiler

    case "$system" in

        *bsd) show_bsd ;;
        darwin) show_darwin ;;
        gnu) show_hurd ;;
        linux) show_linux ;;

    esac
}

main "$@"
